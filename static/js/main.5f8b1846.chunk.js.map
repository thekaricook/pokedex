{"version":3,"sources":["services/pokemon.js","helpers/pokemonTypes.js","components/Card/Card.js","components/Card/index.js","img/pokeapi_logo.png","components/Navbar/Navbar.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","getPokemon","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Card","pokemon","className","src","sprites","front_default","alt","name","types","map","type","style","background","pokemonType","Navbar","logo","App","useState","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialUrl","useEffect","response","next","previous","loadingPokemon","results","fetchData","prev","all","pokemonRecord","_pokemonData","console","log","onClick","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f8b1846.chunk.js","sourcesContent":["export async function getAllPokemon(url) {\n    return new Promise((resolve, reject) => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                resolve(data);\n            });\n    });\n}\n\nexport async function getPokemon(url) {\n    return new Promise((resolve, reject) => {\n        fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            resolve(data);\n        });\n    });\n}","const typeColors = {\n    bug: '#729f3f',\n    dragon: '#53a4cf',\n    fairy: '#fdb9e9',\n    fire: '#fd7d24',\n    ghost: '#7b62a3',\n    ground: '#f7de3f',\n    normal: 'linear-gradient(0deg, rgba(140,146,149,1) 0%, rgba(168,176,179,1) 55%)',\n    pyschic: 'linear-gradient(0deg, rgba(245,84,179,1) 0%, rgba(249,125,198,1) 55%)',\n    steel: 'linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(52,52,52,1) 55%)',\n    dark: 'linear-gradient(0deg, rgba(96,96,96,1) 0%, rgba(128,128,128,1) 55%)',\n    electric: 'linear-gradient(0deg, rgba(230,202,30,1) 0%, rgba(249,221,49,1) 55%)',\n    fighting: 'linear-gradient(0deg, rgba(210,101,34,1) 0%, rgba(235,116,42,1) 55%)',\n    flying: 'linear-gradient(0deg, rgba(56,183,219,1) 0%, rgba(63,202,242,1) 55%)',\n    grass: 'linear-gradient(0deg, rgba(148,195,77,1) 0%, rgba(161,214,80,1) 55%)',\n    ice: 'linear-gradient(0deg, rgba(75,187,221,1) 0%, rgba(85,204,240,1) 55%)',\n    poison: 'linear-gradient(0deg, rgba(185,127,201,1) 0%, rgba(218,157,235,1) 55%)',\n    rock: 'linear-gradient(0deg, rgba(163,140,33,1) 0%, rgba(201,169,16,1) 55%)',\n    water: 'linear-gradient(0deg, rgba(73,158,213,1) 0%, rgba(101,180,232,1) 55%)'\n}\n\nexport default typeColors;","import React from 'react';\nimport pokemonType from '../../helpers/pokemonTypes';\nimport './style.css';\n\nfunction Card({ pokemon }) {\n    return (\n        <div className=\"card\">\n            <div className=\"card-img\">\n                <img src={pokemon.sprites.front_default} alt=\"\" className=\"pokemon-img\" />\n            </div>\n            <div className=\"card-name\">\n                {pokemon.name}\n            </div>\n            <div className=\"card-types\">\n                {pokemon.types.map(type => {\n                    return (\n                        <div className=\"card-type\" style={{background: pokemonType[type.type.name]}}>\n                            {type.type.name}\n                        </div>\n                    )\n                })}\n            </div>\n            \n            <div className=\"card-info\">\n                {/* <div className=\"card-data card-data-weight\">\n                    <p className=\"title\">Number</p>\n                    <p>{pokemon.id}</p>\n                </div>\n                <div className=\"card-data card-data-weight\">\n                    <p className=\"title\">Weight</p>\n                    <p>{pokemon.weight}</p>\n                </div>\n                <div className=\"card-data card-data-ability\">\n                    <p className=\"title\">Abilities</p>\n                    <p>{pokemon.abilities[0].ability.name}</p>\n                </div> */}\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Card;","import Card from './Card';\n\nexport default Card;","export default __webpack_public_path__ + \"static/media/pokeapi_logo.888baca4.png\";","import React from 'react';\nimport logo from '../../img/pokeapi_logo.png';\nimport './style.css';\n\nfunction Navbar() {\n    return (\n        <div className=\"logo-container\">\n            <img src={logo} alt=\"\" className=\"poke-logo\" />\n        </div>\n    );\n}\n\nexport default Navbar;","import Navbar from './Navbar';\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport { getAllPokemon, getPokemon } from './services/pokemon';\nimport Card from './components/Card';\nimport Navbar from './components/Navbar';\nimport './App.css';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadingPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl)\n    await loadingPokemon(data.results)\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const prev = async () => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl)\n    await loadingPokemon(data.results)\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const loadingPokemon = async data => {\n    let _pokemonData = await Promise.all(\n      data.map(async pokemon => {\n        let pokemonRecord = await getPokemon(pokemon.url);\n        return pokemonRecord;\n      })\n    );\n\n    setPokemonData(_pokemonData);\n  };\n\n  console.log(pokemonData);\n  return (\n    <div>\n      {loading ? (\n        <h1 className=\"loading\">Loading...</h1> \n      ) : (\n          <>\n          <Navbar />\n          <div className=\"btn\">\n            <button onClick={prev}>Prev</button>\n            <button onClick={next}>Next</button>\n          </div>\n            <div className=\"grid-container\">\n              {pokemonData.map((pokemon, i) => {\n                return <Card key={i} pokemon={pokemon}/>\n              })}\n            </div>\n            <div className=\"btn\">\n              <button onClick={prev}>Prev</button>\n              <button onClick={next}>Next</button>\n          </div>\n          </>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}